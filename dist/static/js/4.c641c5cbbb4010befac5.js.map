{"version":3,"sources":["webpack:///src/components/resourceCenter/handoutManage/resourceModuleHandoutEdit.vue","webpack:///./src/components/resourceCenter/handoutManage/resourceModuleHandoutEdit.vue?7057","webpack:///./src/components/resourceCenter/handoutManage/resourceModuleHandoutEdit.vue","webpack:///src/components/resourceCenter/handoutManage/resourceModuleHandoutForm.vue","webpack:///./src/components/resourceCenter/handoutManage/resourceModuleHandoutForm.vue?9be7","webpack:///./src/components/resourceCenter/handoutManage/resourceModuleHandoutForm.vue"],"names":["resourceModuleHandoutEdit","HandoutForm","handoutManage_resourceModuleHandoutEdit","render","_h","this","$createElement","_self","_c","attrs","id","$route","params","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","resourceModuleHandoutForm","SelectKnowledge","resourceModuleSelectKnowledge","Object","config","_this","result","children","element","unshift","_this2","resource","title","description","tag_id","data","tag","length","String","path","_this3","resetFields","extension","fileList","_this4","_this5","bool","_this6","subject_list","_this7","ruleForm","_ruleForm","file","region","_this8","_ruleForm2","saveMidfyLecturenote","_this9","_this10","keys","token","initTags","getModifyData","handoutManage_resourceModuleHandoutForm","_vm","staticClass","_v","_s","directives","name","rawName","value","expression","ref","model","label-width","label","prop","rules","required","message","trigger","filterable","placeholder","on","change","didChangeProjectSelection","visible-change","visibleChange","callback","$$v","$set","_l","key","item","filter_rules","type","maxLength","auto-complete","headers","apiHeader","file-list","drag","on-success","uploadSuccess","on-change","handleChange","on-remove","handleRemove","on-error","handleAvatarError","before-upload","beforeAvatarUpload","action","materialUpload","slot","staticStyle","text-align","click","$event","resetForm","loading","submitForm"],"mappings":"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","file":"static/js/4.c641c5cbbb4010befac5.js","sourcesContent":["<template>\r\n    <HandoutForm :id=\"$route.params.id\">\r\n    </HandoutForm>\r\n</template>\r\n<style>\r\n</style>\r\n<script>\r\n    import HandoutForm from './resourceModuleHandoutForm.vue'\r\n\r\n    export default {\r\n        name:'resourceModuleHandoutEdit',\r\n        components: {\r\n            HandoutForm\r\n        }\r\n    }\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/resourceCenter/handoutManage/resourceModuleHandoutEdit.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('HandoutForm',{attrs:{\"id\":_vm.$route.params.id}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler?{\"id\":\"data-v-e6f8cede\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=template&index=0!./src/components/resourceCenter/handoutManage/resourceModuleHandoutEdit.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e6f8cede\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=styles&index=0!./resourceModuleHandoutEdit.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./resourceModuleHandoutEdit.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./resourceModuleHandoutEdit.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e6f8cede\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=template&index=0!./resourceModuleHandoutEdit.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/resourceCenter/handoutManage/resourceModuleHandoutEdit.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"module-clues-content add-resource\">\r\n        <div class=\"outlineeat\">\r\n            {{id?'编辑讲义':'新增讲义'}}\r\n        </div>\r\n        <div class=\"frombox\">\r\n            <el-form :model=\"ruleForm\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\" v-loading=\"loading\">\r\n                <el-form-item label=\"项目\" prop=\"region\" class=\"w_50\" :rules=\"[{required: true, message: '请选择所属项目', trigger: 'change'}]\">\r\n                    <el-select v-model=\"ruleForm.region\" filterable placeholder=\"请选择所属项目\" @change=\"didChangeProjectSelection\" @visible-change=\"visibleChange\">\r\n                        <el-option :label=\"tag.name\" :key=\"tag.id\" :value=\"String(tag.id)\" v-for=\"tag in tags\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"科目\" prop=\"tag_id\" class=\"w_50\" :rules=\"[{required: true, message: '请选择所属科目', trigger: 'change'}]\">\r\n                    <el-select v-model=\"ruleForm.tag_id\" placeholder=\"请选择所属科目\" filterable>\r\n                        <el-option v-for=\"item in subjectData\" :key=\"item.id\" :label=\"item.name\" :value=\"String(item.id)\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"讲义名称\" prop=\"title\" :rules=\"filter_rules({required:true,type:'isAllSpace',maxLength:60})\">\r\n                    <el-input v-model=\"ruleForm.title\" placeholder=\"请填写讲义名称\" auto-complete=\"off\" class=\"w_50\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"讲义描述\">\r\n                    <el-input v-model=\"ruleForm.description\" placeholder=\"请填写讲义描述\" auto-complete=\"off\" class=\"w_50\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"文件名\">\r\n                    <el-upload :headers=\"apiHeader\" :file-list=\"fileList\" drag :on-success=\"uploadSuccess\" :on-change=\"handleChange\" :on-remove=\"handleRemove\" :on-error=\"handleAvatarError\" :before-upload=\"beforeAvatarUpload\" ref=\"onUpload\" :action=\"materialUpload\">\r\n                        <i class=\"el-icon-upload\"></i>\r\n                        <div class=\"el-upload__text\">将文件拖到此处，或\r\n                            <em>点击上传</em>\r\n                        </div>\r\n                        <div class=\"el-upload__tip\" slot=\"tip\">目前仅支持.pdf文件哦！</div>\r\n                    </el-upload>\r\n                </el-form-item>\r\n                <!--<el-form-item label=\"知识点关联\" prop=\"name\">\r\n                  <el-button type=\"text\" @click=\"selectknowledge\">选择知识点</el-button>\r\n                </el-form-item>-->\r\n                <el-form-item style=\"text-align: right\">\r\n                    <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n                    <el-button type=\"primary\" :loading=\"loading\" @click=\"submitForm('ruleForm')\">保存</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n        <!--<SelectKnowledge></SelectKnowledge>-->\r\n    </div>\r\n</template>\r\n<style lang=\"less\">\r\n.add-resource {\r\n    .el-upload__tip {\r\n        line-height: 18px;\r\n        margin-top: -10px;\r\n    }\r\n}\r\n</style>\r\n<script>\r\nimport SelectKnowledge from \"../resourceModuleSelectKnowledge.vue\";\r\nimport { getBaseUrl } from \"../../../util/config\";\r\nimport { getCookie, setCookie } from \"../../../util/cookie.js\";\r\nimport { SAAS_TOKEN } from \"../../../util/keys.js\";\r\nexport default {\r\n    components: {\r\n        SelectKnowledge\r\n    },\r\n    props: [\"id\"],\r\n    computed: {\r\n        materialUpload() {\r\n            return `${getBaseUrl()}apigateway.gaodun.com/resource-api/resource/file`;\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            tags: [],\r\n            subjectData: [],\r\n            fileList: [],\r\n            apiHeader: {},\r\n            isUpload: false,\r\n            loading: false,\r\n            selectFalg: false,\r\n            ruleForm: {\r\n                region: \"\",\r\n                tag_id: \"\",\r\n                title: \"\",\r\n                fileName: \"\",\r\n                path: \"\",\r\n                description: \"\"\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        // 项目数据\r\n        async initTags() {\r\n            let ret = await this.$http.getTags(\"project\");\r\n            let result = ret.result;\r\n            result.forEach(element => {\r\n                element.children &&\r\n                    element.children.unshift({\r\n                        id: \"0\",\r\n                        name: \"不限科目\"\r\n                    });\r\n            });\r\n            this.tags = result;\r\n        },\r\n\r\n        // 获取讲义数据\r\n        async getModifyData() {\r\n            // 编辑讲义\r\n            let ret = await this.$http.getOneResource(this.$route.params.id);\r\n            let data = ret.result.resource;\r\n            this.ruleForm.title = data.title;\r\n            this.ruleForm.description = data.description;\r\n            if (data.tag && data.tag.id && data.tag.id != 0) {\r\n                this.ruleForm.region = String(data.tag.id);\r\n                this.ruleForm.tag_id =\r\n                    data.tag.children && data.tag.children.length != 0\r\n                        ? String(data.tag.children[0].id)\r\n                        : \"0\";\r\n                this.didChangeProjectSelection(data.tag.id);\r\n            } else {\r\n                //没项目，没科目\r\n                this.ruleForm.region = \"\";\r\n                this.ruleForm.tag_id = \"\";\r\n            }\r\n            if (data.path) {\r\n                this.isUpload = true;\r\n                this.ruleForm.path = data.path; //文件路径\r\n                //上传文件的格式化\r\n                this.fileList = [\r\n                    {\r\n                        name: data.title,\r\n                        response: { filePath: data.path }\r\n                    }\r\n                ];\r\n            } else {\r\n                this.isUpload = false; //没上传文件\r\n            }\r\n        },\r\n\r\n        //选择知识点\r\n        selectknowledge() {\r\n            this.$store.dispatch(\"changeDialog\", true);\r\n        },\r\n        // 重置\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n            setTimeout(() => {\r\n                this.fileList = [];\r\n            }, 0);\r\n        },\r\n        //上传前回调\r\n        beforeAvatarUpload(file) {\r\n            var testmsg = file.name.substring(file.name.lastIndexOf(\".\") + 1);\r\n            const extension = testmsg === \"pdf\";\r\n            if (!extension) {\r\n                this.$message({\r\n                    message: \"上传文件只能是 pdf格式!\",\r\n                    type: \"warning\"\r\n                });\r\n            }\r\n            return extension;\r\n        },\r\n        //上传文件改变回调\r\n        handleChange(file, fileList) {\r\n            this.fileList = fileList.slice(-1);\r\n        },\r\n        //移除文件回调\r\n        handleRemove(file, fileList) {\r\n            if (fileList.length == 0) {\r\n                this.isUpload = false;\r\n            }\r\n            this.fileList = fileList;\r\n        },\r\n        //上传失败回调\r\n        handleAvatarError(err, file, fileList) {\r\n            this.$message.error(\"上传失败！\");\r\n            setTimeout(() => {\r\n                this.fileList = [];\r\n            }, 0);\r\n        },\r\n        // 上传结束\r\n        uploadSuccess(response, file) {\r\n            if (response.status === 0) {\r\n                this.isUpload = true;\r\n                this.$message({\r\n                    message: \"文件上传成功\",\r\n                    type: \"success\"\r\n                });\r\n                this.ruleForm.path = response.result.path;\r\n            } else {\r\n                this.isUpload = false;\r\n                setTimeout(() => {\r\n                    this.fileList = [];\r\n                }, 0);\r\n                this.ruleForm.path = \"\";\r\n                this.$message({\r\n                    message: \"文件上传失败\",\r\n                    type: \"warning\"\r\n                });\r\n            }\r\n        },\r\n        //选择器开关函数\r\n        visibleChange(bool) {\r\n            this.selectFalg = bool;\r\n        },\r\n        // 项目\r\n        didChangeProjectSelection(id) {\r\n            this.tags.forEach(item => {\r\n                if (item.id == id) {\r\n                    let subject_list = [...item.children];\r\n                    this.subjectData = subject_list;\r\n                    if (this.selectFalg) {\r\n                        this.ruleForm.tag_id = \"0\";\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        //新建讲义\r\n        async saveLecturenote() {\r\n            const {\r\n                tag_id,\r\n                title,\r\n                file,\r\n                path,\r\n                description,\r\n                region\r\n            } = this.ruleForm;\r\n            let params = {\r\n                tag_id: tag_id == \"0\" ? region : tag_id,\r\n                title,\r\n                description,\r\n                file,\r\n                path\r\n            };\r\n            this.loading = true;\r\n            let ret = await this.$http.saveLecturenote(params);\r\n            this.loading = false;\r\n            this.isUpload = false;\r\n            // this.fileList = [];\r\n            // this.ruleForm.path = '';\r\n            // this.resetForm('ruleForm');\r\n            if (ret.status == 0) {\r\n                this.$message({\r\n                    message: \"保存成功\",\r\n                    type: \"success\"\r\n                });\r\n                setTimeout(() => {\r\n                    this.$router.push({\r\n                        path: \"/resource/handout/list\"\r\n                    });\r\n                }, 1000);\r\n            } else {\r\n                this.$message({\r\n                    message: \"保存失败\",\r\n                    type: \"error\"\r\n                });\r\n            }\r\n        },\r\n        //修改讲义\r\n        async saveMidfyLecturenote() {\r\n            const {\r\n                tag_id,\r\n                title,\r\n                file,\r\n                path,\r\n                description,\r\n                region\r\n            } = this.ruleForm;\r\n            let params = {\r\n                tag_id: tag_id == \"0\" ? region : tag_id,\r\n                _method: \"PUT\",\r\n                title,\r\n                description,\r\n                path\r\n            };\r\n            this.loading = true;\r\n            let ret = await this.$http.saveMidfyLecturenote(\r\n                this.$route.params.id,\r\n                params\r\n            );\r\n            this.loading = false;\r\n            if (ret.status == 0) {\r\n                this.$message({\r\n                    message: \"保存成功\",\r\n                    type: \"success\"\r\n                });\r\n                setTimeout(() => {\r\n                    this.$router.push({\r\n                        path: \"/resource/handout/list\"\r\n                    });\r\n                }, 1000);\r\n            } else {\r\n                this.$message({\r\n                    message: \"保存失败\",\r\n                    type: \"error\"\r\n                });\r\n            }\r\n        },\r\n        // 保存讲义\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate(valid => {\r\n                if (valid) {\r\n                    if (!this.isUpload) {\r\n                        this.$message({\r\n                            message: \"需上传文件才能保存\",\r\n                            type: \"warning\"\r\n                        });\r\n                        return;\r\n                    }\r\n                    let ids = this.$route.params.id;\r\n                    this.loading = true;\r\n                    if (ids) {\r\n                        this.saveMidfyLecturenote(); //修改\r\n                    } else {\r\n                        this.saveLecturenote(); //新增\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    mounted() {},\r\n    async created() {\r\n        this.loading = true;\r\n        let token = \"Basic \" + getCookie(SAAS_TOKEN);\r\n        this.apiHeader = { Authentication: token };\r\n        this.id = this.$route.params.id;\r\n        await this.initTags();\r\n        if (this.$route.params.id) {\r\n            //有id是编辑讲义，不需要拉一次tag_Id列表\r\n            await this.getModifyData();\r\n        }\r\n        this.loading = false;\r\n    }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/resourceCenter/handoutManage/resourceModuleHandoutForm.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"module-clues-content add-resource\"},[_c('div',{staticClass:\"outlineeat\"},[_vm._v(\"\\n        \"+_vm._s(_vm.id?'编辑讲义':'新增讲义')+\"\\n    \")]),_vm._v(\" \"),_c('div',{staticClass:\"frombox\"},[_c('el-form',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],ref:\"ruleForm\",staticClass:\"demo-ruleForm\",attrs:{\"model\":_vm.ruleForm,\"label-width\":\"100px\"}},[_c('el-form-item',{staticClass:\"w_50\",attrs:{\"label\":\"项目\",\"prop\":\"region\",\"rules\":[{required: true, message: '请选择所属项目', trigger: 'change'}]}},[_c('el-select',{attrs:{\"filterable\":\"\",\"placeholder\":\"请选择所属项目\"},on:{\"change\":_vm.didChangeProjectSelection,\"visible-change\":_vm.visibleChange},model:{value:(_vm.ruleForm.region),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"region\", $$v)},expression:\"ruleForm.region\"}},_vm._l((_vm.tags),function(tag){return _c('el-option',{key:tag.id,attrs:{\"label\":tag.name,\"value\":String(tag.id)}})}))],1),_vm._v(\" \"),_c('el-form-item',{staticClass:\"w_50\",attrs:{\"label\":\"科目\",\"prop\":\"tag_id\",\"rules\":[{required: true, message: '请选择所属科目', trigger: 'change'}]}},[_c('el-select',{attrs:{\"placeholder\":\"请选择所属科目\",\"filterable\":\"\"},model:{value:(_vm.ruleForm.tag_id),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"tag_id\", $$v)},expression:\"ruleForm.tag_id\"}},_vm._l((_vm.subjectData),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":String(item.id)}})}))],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"讲义名称\",\"prop\":\"title\",\"rules\":_vm.filter_rules({required:true,type:'isAllSpace',maxLength:60})}},[_c('el-input',{staticClass:\"w_50\",attrs:{\"placeholder\":\"请填写讲义名称\",\"auto-complete\":\"off\"},model:{value:(_vm.ruleForm.title),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"title\", $$v)},expression:\"ruleForm.title\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"讲义描述\"}},[_c('el-input',{staticClass:\"w_50\",attrs:{\"placeholder\":\"请填写讲义描述\",\"auto-complete\":\"off\"},model:{value:(_vm.ruleForm.description),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"description\", $$v)},expression:\"ruleForm.description\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"文件名\"}},[_c('el-upload',{ref:\"onUpload\",attrs:{\"headers\":_vm.apiHeader,\"file-list\":_vm.fileList,\"drag\":\"\",\"on-success\":_vm.uploadSuccess,\"on-change\":_vm.handleChange,\"on-remove\":_vm.handleRemove,\"on-error\":_vm.handleAvatarError,\"before-upload\":_vm.beforeAvatarUpload,\"action\":_vm.materialUpload}},[_c('i',{staticClass:\"el-icon-upload\"}),_vm._v(\" \"),_c('div',{staticClass:\"el-upload__text\"},[_vm._v(\"将文件拖到此处，或\\n                        \"),_c('em',[_vm._v(\"点击上传\")])]),_vm._v(\" \"),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"目前仅支持.pdf文件哦！\")])])],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"text-align\":\"right\"}},[_c('el-button',{on:{\"click\":function($event){_vm.resetForm('ruleForm')}}},[_vm._v(\"重置\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.loading},on:{\"click\":function($event){_vm.submitForm('ruleForm')}}},[_vm._v(\"保存\")])],1)],1)],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler?{\"id\":\"data-v-59de016a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=template&index=0!./src/components/resourceCenter/handoutManage/resourceModuleHandoutForm.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-59de016a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=styles&index=0!./resourceModuleHandoutForm.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./resourceModuleHandoutForm.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./resourceModuleHandoutForm.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-59de016a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=template&index=0!./resourceModuleHandoutForm.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/resourceCenter/handoutManage/resourceModuleHandoutForm.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}